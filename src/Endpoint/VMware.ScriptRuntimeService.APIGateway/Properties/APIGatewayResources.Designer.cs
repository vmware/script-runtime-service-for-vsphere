//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VMware.ScriptRuntimeService.APIGateway.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class APIGatewayResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal APIGatewayResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VMware.ScriptRuntimeService.APIGateway.Properties.APIGatewayResources", typeof(APIGatewayResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About information for the product.
        /// </summary>
        public static string AboutTagDescription {
            get {
                return ResourceManager.GetString("AboutTagDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.0.0.
        /// </summary>
        public static string ApiVersion {
            get {
                return ResourceManager.GetString("ApiVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument transformation script not found for &apos;{0}&apos;.
        /// </summary>
        public static string ArgumentScriptsController_ArgumentTransformationScriptNotFound {
            get {
                return ResourceManager.GetString("ArgumentScriptsController_ArgumentTransformationScriptNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SRS has a number of script templates to help users pass PowerCLI objects as arguments to scripts with PowerCLI type parameters. Argument transformation scripts are scripts given on the Parameter structure that produce value which is used as an argument to specific parameter of a requested script execution..
        /// </summary>
        public static string ArgumentScriptsTagDescription {
            get {
                return ResourceManager.GetString("ArgumentScriptsTagDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SRS uses vCenter Server SSO it is registered to as Identity and Authentication Server. SRS does not apply any role-based access control to its features. Any vSphere user that can authenticate in vCenter Server SSO can access the SRS feature. SRS establishes PowerCLI connections to vCenter Servers on behalf of the authenticated user. PowerCLI scripts run on behalf of the authenticated user..
        /// </summary>
        public static string AuthenticationTagDescription {
            get {
                return ResourceManager.GetString("AuthenticationTagDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session &apos;{0}&apos; doesn&apos;t exist.
        /// </summary>
        public static string InvalidSessionException_SessionDoesntExist {
            get {
                return ResourceManager.GetString("InvalidSessionException_SessionDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session &apos;{0}&apos; has expired.
        /// </summary>
        public static string InvalidSessionException_SessionExpired {
            get {
                return ResourceManager.GetString("InvalidSessionException_SessionExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create runspace for user &quot;{0}&quot; failed with error: {1}.
        /// </summary>
        public static string MultiTenantRunspaceProvider_CreateFailed {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_CreateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create web console for user &quot;{0}&quot; failed with error: {1}.
        /// </summary>
        public static string MultiTenantRunspaceProvider_CreateWebConsoleFailed {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_CreateWebConsoleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get runspace for user &quot;{0}&quot; failed with error: {1}.
        /// </summary>
        public static string MultiTenantRunspaceProvider_GetFailed {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_GetFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get web console for user &quot;{0}&quot; failed with error: {1}.
        /// </summary>
        public static string MultiTenantRunspaceProvider_GetWebConsoleFailed {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_GetWebConsoleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill runspace for user &quot;{0}&quot; failed with error: {1}.
        /// </summary>
        public static string MultiTenantRunspaceProvider_KillFailed {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_KillFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill web console for user &quot;{0}&quot; failed with error: {1}.
        /// </summary>
        public static string MultiTenantRunspaceProvider_KillWebConsoleFailed {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_KillWebConsoleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List runspaces for user &quot;{0}&quot; failed with error: {1}.
        /// </summary>
        public static string MultiTenantRunspaceProvider_ListFailed {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_ListFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List web consoles for user &quot;{0}&quot; failed with error: {1}.
        /// </summary>
        public static string MultiTenantRunspaceProvider_ListWebConsoleFailed {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_ListWebConsoleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &quot;{0}&quot; doesn&apos;t have running runspaces.
        /// </summary>
        public static string MultiTenantRunspaceProvider_UserHasNoRunspaces {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_UserHasNoRunspaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &quot;{0}&quot; doesn&apos;t have runspace with id &quot;{1}&quot;.
        /// </summary>
        public static string MultiTenantRunspaceProvider_UserHasNoRunspaceWithId {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_UserHasNoRunspaceWithId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &quot;{0}&quot; doesn&apos;t have running webconsoles.
        /// </summary>
        public static string MultiTenantRunspaceProvider_UserHasNoWebConsoles {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_UserHasNoWebConsoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &quot;{0}&quot; doesn&apos;t have webconsole with id &quot;{1}&quot;.
        /// </summary>
        public static string MultiTenantRunspaceProvider_UserHasNoWebConsoleWithId {
            get {
                return ResourceManager.GetString("MultiTenantRunspaceProvider_UserHasNoWebConsoleWithId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace where script runs doesn&apos;t respond. Could be because script active time is longer than maximum allowed time for a script execution.
        /// </summary>
        public static string PollingScriptExecutionPersister_ScriptFailed_RunspaceDisappeared {
            get {
                return ResourceManager.GetString("PollingScriptExecutionPersister_ScriptFailed_RunspaceDisappeared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No VC refresh token is available for connect PowerCLI operation.
        /// </summary>
        public static string PowerCLIVCloginController_NoRefreshTokenAvailable_For_Session {
            get {
                return ResourceManager.GetString("PowerCLIVCloginController_NoRefreshTokenAvailable_For_Session", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acquire Authorization Token from STS failed..
        /// </summary>
        public static string PowerCLIVCLoginController_Post_AcquireAuthorizationTokenFailed {
            get {
                return ResourceManager.GetString("PowerCLIVCLoginController_Post_AcquireAuthorizationTokenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Runtime Service for vSphere (SRS) enables vSphere users and services (clients) to manage PowerCLI instances and run PowerCLI scripts. SRS clients authenticate once with vSphere credentials or access token. SRS clients can create PowerCLI instances and run scripts within. PowerCLI runs server-side and automatically connects to target vCenter servers. SRS tracks history of script outputs..
        /// </summary>
        public static string ProductApiDescription {
            get {
                return ResourceManager.GetString("ProductApiDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to v1.
        /// </summary>
        public static string ProductAPIVersion {
            get {
                return ResourceManager.GetString("ProductAPIVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Runtime Service for vSphere.
        /// </summary>
        public static string ProductName {
            get {
                return ResourceManager.GetString("ProductName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.0.
        /// </summary>
        public static string ProductVersion {
            get {
                return ResourceManager.GetString("ProductVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace Provider failed to destroy runspace with id &apos;{0}&apos;.
        /// </summary>
        public static string RunspaceController_Kill_RunspaceProviderKillFailed {
            get {
                return ResourceManager.GetString("RunspaceController_Kill_RunspaceProviderKillFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no runspaces.
        /// </summary>
        public static string RunspaceController_List_NoRunspaces {
            get {
                return ResourceManager.GetString("RunspaceController_List_NoRunspaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace Provider failed to list user runspaces.
        /// </summary>
        public static string RunspaceController_List_RunspaceProviderListFailed {
            get {
                return ResourceManager.GetString("RunspaceController_List_RunspaceProviderListFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of running runspaces is reached.
        /// </summary>
        public static string RunspaceController_Post_MaxnumberOfRunspacesReached {
            get {
                return ResourceManager.GetString("RunspaceController_Post_MaxnumberOfRunspacesReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace with id &apos;{0}&apos; not found.
        /// </summary>
        public static string RunspaceNotFound {
            get {
                return ResourceManager.GetString("RunspaceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace &apos;{0}&apos; is not ready to run script. Runspace state is: {1}.
        /// </summary>
        public static string RunspaceNotReady {
            get {
                return ResourceManager.GetString("RunspaceNotReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace is a PowerShell instance running in a dedicated container as a Kubernetes pod on the Kubernetes cluster. Runspace hosts the script running engine. Runspaces run in containers to isolate different users scripts and to isolate the script runtime from the hosting infrastructure. Multiple users can access SRS and run scripts. Different users are isolated in their own PowerShell runtime without access to other users script runtime and the underlying infrastructure. A user can create more than one runspa [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RunspaceTagDescription {
            get {
                return ResourceManager.GetString("RunspaceTagDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To run a script in SRS, users request Script Execution. Script Execution is an SRS resource that represents a script that user requests to run in a Runspace. SRS assigns unique Id for a script execution and lets the user track the script progress and outcomes. When a script execution completes, SRS keeps a script execution record with the produced outputs. Script outputs consist of objects that script returns and messages that are raised in PowerShell run-time streams. PowerShell has six output streams Outp [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ScriptExecutionsTagDescription {
            get {
                return ResourceManager.GetString("ScriptExecutionsTagDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Storage Service failed to retrieve script execution output.
        /// </summary>
        public static string ScriptOutputController_ScriptStorageService_FailedToRetrieveScriptOutput {
            get {
                return ResourceManager.GetString("ScriptOutputController_ScriptStorageService_FailedToRetrieveScriptOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace failed to cancel the script execution.
        /// </summary>
        public static string ScriptsController_RunspaceFailedToCancelScriptExecution {
            get {
                return ResourceManager.GetString("ScriptsController_RunspaceFailedToCancelScriptExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace failed to process the script execution request.
        /// </summary>
        public static string ScriptsController_RunspaceFailedToProcessScriptRequest {
            get {
                return ResourceManager.GetString("ScriptsController_RunspaceFailedToProcessScriptRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script with id &apos;{0}&apos; not found.
        /// </summary>
        public static string ScriptsController_ScriptNotFound {
            get {
                return ResourceManager.GetString("ScriptsController_ScriptNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Storage Service failed to retrieve script execution history.
        /// </summary>
        public static string ScriptsController_ScriptStorageService_FailedToRetrieveScripts {
            get {
                return ResourceManager.GetString("ScriptsController_ScriptStorageService_FailedToRetrieveScripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Storage Service failed to retrieve script execution streams.
        /// </summary>
        public static string ScriptStreamsController_ScriptStorageService_FailedToRetrieveScriptStreams {
            get {
                return ResourceManager.GetString("ScriptStreamsController_ScriptStorageService_FailedToRetrieveScriptStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saml Token is not valid.
        /// </summary>
        public static string SessionsController_AuthenticationFailed {
            get {
                return ResourceManager.GetString("SessionsController_AuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization header is not valid or session has been expired..
        /// </summary>
        public static string SessionsController_AuthorizationHeaderIsNotValid {
            get {
                return ResourceManager.GetString("SessionsController_AuthorizationHeaderIsNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sessions Service failed to delete session.
        /// </summary>
        public static string SessionsController_SessionsService_FailedToDeleteSession {
            get {
                return ResourceManager.GetString("SessionsController_SessionsService_FailedToDeleteSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X-SRS-API-KEY.
        /// </summary>
        public static string SRSAuthorizationHeader {
            get {
                return ResourceManager.GetString("SRSAuthorizationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware, Inc..
        /// </summary>
        public static string Vendor {
            get {
                return ResourceManager.GetString("Vendor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace Provider failed to destroy web console with id &apos;{0}&apos;.
        /// </summary>
        public static string WebConsoleController_Kill_RunspaceProviderKillWebConsoleFailed {
            get {
                return ResourceManager.GetString("WebConsoleController_Kill_RunspaceProviderKillWebConsoleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runspace Provider failed to list user web consoles.
        /// </summary>
        public static string WebConsoleController_List_RunspaceProviderListWebConsoleFailed {
            get {
                return ResourceManager.GetString("WebConsoleController_List_RunspaceProviderListWebConsoleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of web consoles is reached.
        /// </summary>
        public static string WebConsoleController_Post_MaxNumberOfWebConsolesReached {
            get {
                return ResourceManager.GetString("WebConsoleController_Post_MaxNumberOfWebConsolesReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Console with id &apos;{0}&apos; not found.
        /// </summary>
        public static string WebConsoleNotFound {
            get {
                return ResourceManager.GetString("WebConsoleNotFound", resourceCulture);
            }
        }
    }
}
