apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-unregister"
  namespace: script-runtime-service
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      namespace: script-runtime-service
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: srs-setup
      containers:
      - image: {{ .Values.srs.setup_image.repository }}:{{ .Values.srs.setup_image.tag }}
        name: srs-setup
        imagePullPolicy: IfNotPresent
        command: ["/app/service/setup"]
        env:
          - name: RUN
            value: UnregisterFromVC
          - name: SERVICE_STS_SETTINGS_PATH
            value: /app/sts-settings.json
          - name: TARGET_VC_SERVER
            value: {{ required "Specify VC address to register Script Runtime Service for vSphere with" .Values.vc.address }}
          - name: TARGET_VC_USER
            value: {{ required "Specify VC user with administrator privileges to register Script Runtime Service for vSphere" .Values.vc.user }}
          - name: TARGET_VC_PASSWORD
            value: {{ required "Specify password for the VC user" .Values.vc.password }}
          {{ if and .Values.vc .Values.vc.tls_thumbprint }}
          - name: TARGET_VC_THUMBPRINT
            value: {{ .Values.vc.tls_thumbprint  }}
          {{ end  }}
          - name: SERVICE_HOSTNAME
            value: {{ required "Specify SRS service hostname" .Values.srs.service.hostname  }}
        volumeMounts:
            - name: sts-settings
              mountPath: "/app/sts-settings.json"
              subPath: "sts-settings.json"
      volumes:
        - name: sts-settings
          configMap:
            name: sts-settings
            items:
            - key: sts-settings.json
              path: sts-settings.json
      restartPolicy: Never
